- name: Clone MoltenIron
  become_user: stack
  shell:
    executable: /bin/bash
    cmd: |
      sudo chmod -R 777 /opt
      cd /opt/stack
      git clone https://opendev.org/openstack/molteniron
      cd molteniron
      if [[ {{ zuul.branch }} == stable/train || {{ zuul.branch }} == stable/ussuri ]]; then
        sudo pip3 install 'setuptools<58'
      fi
      sudo pip3 install .
      if [[ {{ zuul.branch }} == stable/train ]]; then
        sudo apt install -y ovmf
        sudo chmod 777 /usr/share/
        sudo mkdir /var/lib/libvirt
        sudo mkdir /var/lib/libvirt/images
        sudo chmod 777 /var/lib/libvirt/images
      fi

- name: Create conf.yaml
  become_user: stack
  shell:
    cmd: |
      cd /opt/stack/molteniron
      mkdir -p /opt/stack/logs/molteniron
      echo "mi_port: 5656" >> conf.yaml
      echo "serverIP: 172.16.97.20" >> conf.yaml
      echo "maxTime: 120000" >> conf.yaml
      echo "logdir: /opt/stack/logs/molteniron" >> conf.yaml
      echo "maxLogDays: 7" >> conf.yaml
      echo "sqlUser: molteniron" >> conf.yaml
      echo "sqlPass: password" >> conf.yaml

- name: Start moltenirond-helper
  become_user: stack
  shell: sudo moltenirond-helper -c /opt/stack/molteniron start

- name: Checkout BareMetal
  become_user: stack
  shell:
    executable: /bin/bash
    cmd: |
      echo {{ zuul.job }}
      hardware_label="$(echo {{ zuul.job }} | cut -d'-' -f1)_$(echo {{ zuul.job }} | cut -d'-' -f2)"
      echo $hardware_label
      while :
      do
        molteniron -c /opt/stack/molteniron allocate {{ reserved_by }} 1 $hardware_label > /tmp/molteniron-checkout.json
        rc=$?
        if [ $rc = 0 ]; then
          break
        fi
      echo "Waiting for BareMetal to Become Available"
      sleep 60
      done

- name: Show molteniron-checkout.json
  become_user: stack
  shell: "cat /tmp/molteniron-checkout.json"

- name: create hardware_info file
  become_user: stack
  shell:
    cmd: |
      mkdir -p /opt/stack/devstack/files
      bmcIp=$(molteniron -c /opt/stack/molteniron get_field {{ reserved_by }} ipmi_ip | cut -d' ' -f7 | cut -d'"' -f2)
      macAddr=$(molteniron -c /opt/stack/molteniron get_field {{ reserved_by }} port_hwaddr | cut -d' ' -f7 | cut -d'"' -f2)
      bmcUser=$(molteniron -c /opt/stack/molteniron get_field {{ reserved_by }} ipmi_user | cut -d' ' -f7 | cut -d'"' -f2)
      bmcPass=$(molteniron -c /opt/stack/molteniron get_field {{ reserved_by }} ipmi_password | cut -d' ' -f7 | cut -d'"' -f2)
      echo "$bmcIp $macAddr $bmcUser $bmcPass"
      echo "$bmcIp $macAddr $bmcUser $bmcPass /redfish/v1/Systems/System.Embedded.1 False" > /opt/stack/devstack/files/hardware_informo

- name: Show hardware_info
  become_user: stack
  shell: "cat /opt/stack/devstack/files/hardware_informo"